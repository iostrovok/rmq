// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/iostrovok/rmq (interfaces: BatchConsumer)

// Package mmock is a generated GoMock package.
package mmock

import (
	gomock "github.com/golang/mock/gomock"
	rmq "github.com/iostrovok/rmq"
	reflect "reflect"
)

// MockBatchConsumer is a mock of BatchConsumer interface
type MockBatchConsumer struct {
	ctrl     *gomock.Controller
	recorder *MockBatchConsumerMockRecorder
}

// MockBatchConsumerMockRecorder is the mock recorder for MockBatchConsumer
type MockBatchConsumerMockRecorder struct {
	mock *MockBatchConsumer
}

// NewMockBatchConsumer creates a new mock instance
func NewMockBatchConsumer(ctrl *gomock.Controller) *MockBatchConsumer {
	mock := &MockBatchConsumer{ctrl: ctrl}
	mock.recorder = &MockBatchConsumerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBatchConsumer) EXPECT() *MockBatchConsumerMockRecorder {
	return m.recorder
}

// Consume mocks base method
func (m *MockBatchConsumer) Consume(arg0 rmq.Deliveries) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Consume", arg0)
}

// Consume indicates an expected call of Consume
func (mr *MockBatchConsumerMockRecorder) Consume(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Consume", reflect.TypeOf((*MockBatchConsumer)(nil).Consume), arg0)
}
